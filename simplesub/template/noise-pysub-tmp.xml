<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
     <processor name="AIDA"/>
     <processor name="UniversalNativeReader"/>
     <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor"/>
     <processor name="HotPixelKiller"/>
     <!-- <processor name="Noise"/> -->
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> </parameter>
      <parameter name="GearXMLFile" value="@GearFile@"/>
      <parameter name="MaxRecordNumber" value="100000000"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE4"/>
   </global>

   <processor name="AIDA" type="AIDAProcessor">
     <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
     <!-- compression of output file 0: false >0: true (default) -->
     <parameter name="Compress" type="int" value="1"/>
     <!-- filename without extension-->
     <parameter name="FileName" type="string" value="@HistoPath@/run@RunNumber@-noise-histo"/>
     <!-- type of output file xml (default) or root ( only OpenScientist)-->
     <parameter name="FileType" type="string" value="root"/>
   </processor>

   <processor name="UniversalNativeReader" type="EUTelNativeReader">
     <!--Reads data streams produced by EUDAQ and produced the corresponding LCIO output-->
     <!--This is the eudrb producer output collection when read in RAW mode-->
     <parameter name="EUBRDRawModeOutputCollection" type="string" lcioOutType="TrackerRawData"> rawdata </parameter>
     <!--This si the mimotel output collection when read in ZS mode-->
     <parameter name="EUDRBZSModeOutputCollection" type="string" lcioOutType="TrackerData"> zsdata </parameter>
     <!-- Sorry, this parameter isn't a default parameter for this processor: description and type lost!!  -->
     <parameter name="EUDRBSensorIDVec"> 0 1 2 3 4 5 </parameter>
     <!--Type of sparsified pixel data structure (use SparsePixelType enumerator)-->
     <!--parameter name="EUDRBSparsePixelType" type="int" value="1"/-->
     <!--Pay attention to the boards TLU stamp and reshuffle the events to sync-->
     <parameter name="SyncTriggerID" type="bool" value="true"/>
     <!--The geometry identification number-->
     <parameter name="GeoID" type="int" value="56"/>
     <!--This is the input file name-->
     <parameter name="InputFileName" type="string" value="@NativePath@/run@RunNumber@.raw  "/>
   </processor>


 <processor name="Mimosa26EUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> m26_noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> m26_pedestal </parameter>
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> m26_status </parameter>
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec"> 1 1 1 1 1 1 </parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec"> 0 0 0 0 0 0 </parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec"> 1151 1151 1151 1151 1151 1151</parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec"> 575 575 575 575 575 575  </parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 0  </parameter>
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <parameter name="MinYVector" type="IntVec"> 0 0 0 0 0 0</parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4 5 </parameter>
</processor>


 <processor name="HotPixelKiller" type="EUTelHotPixelKiller">
    <parameter name="HotPixelDBFile" type="string" value="@DbPath@/@NoiseDb@"/>
    <parameter name="HotPixelCollectionName" type="string" value="hotpixel_m26" />
    <!-- INPUT / OUTPUT  -->
    <!--Input of Zero Suppressed data-->
    <!--Noise (input) collection name-->
    <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> m26_noise </parameter>
    <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> m26_status </parameter>
    <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> zsdata_m26 </parameter>
    <parameter name="BuildHotPixelDatabase" type="int" value="1" />
    <!--This float number [0,1] represents the maximum allowed firing frequency
        within the selected number of event per cycle-->
    <parameter name="MaxAllowedFiringFreq" type="float" value="@TelOccupancyThresh@"/>
    <!--The number of events to be considered for each update cycle-->
    <parameter name="NoOfEventPerCycle" type="int" value="10000"/>
    <!--The total number of hot pixel cycle-->
    <parameter name="TotalNoOfCycle" type="int" value="0"/>
 </processor>

  <processor name="Noise" type="EUTelNoiseOccProcessor">
	<parameter name="NoiseOccConstantFile" type="string" value="@DbPath@/@NoiseDb@"/>
	<parameter name="ZSDataCollectionName" type="stringvec" value="zsdata_apix zsdata_m26"/>
	<parameter name="HistoInfoFileName" type="string" value="@HistoInfo@"/>
  </processor>  
</marlin>
